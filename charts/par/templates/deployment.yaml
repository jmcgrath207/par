apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "par.fullname" . }}-controller-manager
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: par
    app.kubernetes.io/part-of: par
  {{- include "par.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "par.fullname" . }}-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: par
    app.kubernetes.io/part-of: par
    control-plane: controller-manager
  {{- include "par.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "par.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "par.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag | default .Chart.AppVersion }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        - name: CURRENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: Always
        name: manager
        {{- if .Values.controllerManager.manager.enableProbes }}
        livenessProbe: {{- toYaml .Values.controllerManager.manager.livenessProbe | nindent 10 }}
        readinessProbe: {{- toYaml .Values.controllerManager.manager.readinessProbe | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
          - name: tls
            mountPath: /tmp/k8s-webhook-server/serving-certs/tls.key
            readOnly: true
            subPath: tls.key
          - name: tls
            mountPath: /tmp/k8s-webhook-server/serving-certs/tls.crt
            readOnly: true
            subPath: tls.crt
      securityContext:
        runAsNonRoot: {{ .Values.controllerManager.manager.securityContext.runAsNonRoot }}
      volumes:
        - name: tls
          secret:
            defaultMode: 420
            secretName: {{ .Release.Name }}
      serviceAccountName: {{ include "par.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10