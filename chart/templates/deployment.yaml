apiVersion: apps/v1
kind: Deployment
metadata:
  name: par-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: par
    app.kubernetes.io/part-of: par
    control-plane: controller-manager
    par.dev/manager: "true"
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
        par.dev/manager: "true"
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 9443
          name: webhook
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 9000
          name: dns
          protocol: UDP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: certs
            readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CAP_NET_RAW
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsUser: 65532
      securityContext:
        runAsNonRoot: true
      serviceAccountName: par-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: webhook-server-certs